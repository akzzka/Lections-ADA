"==========Переменные======"
# переменные это ссылки на ячейке памяти, где находится какие то данные, 
# для дальнейшого исползовании этих данных, при обрашении к названию переменной.

name = 'Акжол'
age = 23

"====Правила наименование переменных======="

a = 10 #Можно, но не понятно
#1name = 'Акжол' - нельзя начинать названия с символа
#my name ='Акжол' # SymtaxError
#my-name = 'Акжол' # так нельзя
#if = 'Akjol' - нельзя написать переменные ключевыми словами (if, class, def, while, for)

"=====Стиль написания переменных====="
my_name = 'Акжол' # разделение слов только при помощи "_" Snake case - Python способ наименование переменных

myName = 'Акжол' # Camel case - Стиль наименование в других языка программирование

"======Ввод и вывод данных (print(), input())========="

# print - функция для вывода текста/данных в терминал
print(my_name)
print(23)
print('Эргешов')

# input - функция для ввода данных с терминала
number = input('Введите число: ')
razdel = '====================================================='
print(razdel)
print('Введенное число: ', number)

"=======Коментарии======"

#1) при помощи '#'
#2) при помощи
"""
 это пример
"""
#3) при помощи ''
"=============================="
# в Python отличия '' или "" ковичками нет


"======Типы данных========"
"""
 Типы данных в Pythone делятся на 2 типа: изменяемые и неизменяемые

 изменяемые типы данных: list (список), dict (словари), set (множество)

 неизменяемые типы данных: int (числа), float/decimal (числа с плавающей точкой), str (строки), 
 tuple (кортеж), bool (булевые значение True/False), None (пустота)
"""

# изменяемые
list_ = [1, 2, True, 'hello']
dict_ = {'name': 'Акжол', 1: 'a', 'jk': 123}
set_ = {1, 2, 3, True, False}
"""
 0 - False
 1 - True
"""

# неизменяемые
int_ = 23
float_ = 23.12
str_ = "Hello"
tuple_ = (1, 2, 3, 4)
bool1 = True
bool2 = False
none = None

print('изменяемые типы данных: ', list_, dict_, set_)
print('неизменяемые типы данных: ', int_, float_, str_, tuple_, bool1, bool2, none)

print(help('keywords'))
