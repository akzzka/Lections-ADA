'===================== Exceptions =================='
# исключение (ошибки)-объекты, которые прерывают работу кода, если не были обработаны

SyntaxError
# Исключение, которое выходит когда в коде доппущена синтаксическая ошибка

"""
(
SyntaxError: unexpected EOF while parsing
(когда мы не закрыли скобочку или кавычку)
"""
# print(9/0
"""
a = 
SyntaxError: invalid syntax
(когда мы сделали что-то не правильно в синтаксисе)
"""
# print(0000000000)

NameError
#  это исключение, которое выходит, когда мы обращаемся к несуществующей переменной
"""
NameError: name 'sasas is not defiend
"""

IndexError
#  это исключение, которое выходит, когда мы обращаемся по несуществующей индексу
#  list_ = [1,2,3]
#   print(list_[1000])
"""
IndexError: list index out of range
"""

KeyError
# исключение, которое выходит, когда мы обращаемся по несуществующей ключу
# dict_ = {1: 1}
# dict_['b'] # KeyError 'b'

ValueError
# когда мы передаем в функции не корректныx для нее тип данных
# int('dsfss') # ValueError

IndentationError
# выходит когда мы неправильно используем отступы
#    a = 5 # IndentationError: unexpected indent

TypeError
# когда мы пытаемся использовать методы не свойственные какому-то типу данных или
# когда мы пытаемся передать функции больше или меньше аргументов, чем принимает функция

Exception 
# исключение, которые создали, что бы его вызвали

"================== Вызов исключений ======================="
# raise NameError('my exception') # NameError: my exception

"================= Обработка исключений ======================"
#чтобы код не прекращал свою работу, мы можем использовать контрукцию try-except, и обрабатывать вызванное исключение

# try:
#     # код который возможно вызовет ошибки
#     num = int(input('введите число'))
# except ValueError: 
#     #ошибка которая может возникнуть
#     print('Вы ввели не число')    
# else:
#     # код который отработает, только если ошибка не вышла
#     print("Введенное число", num)
# finally: 
#     # код который отработает в любом случае
#     print("до свидание")

# try:
#     raise ValueError
# except (SyntaxError, NameError):
#     print('Вышла одна из ошибок: SyntaxError, NameError')

# try:
#     raise Exception
# except:
#     print('Отлевлена любая ошибка')

# try:
#     raise TypeError('Type error')
# except Exception as error:
#     print('Ошибка', type(error).__name__)

"""1) напишите полный синтаксис конструкции try-except"""
# try:
#     pass
# except:
#     pass
# else:
#     pass
# finally:
#     pass

""" 2)Напишите код, который пытается вывести значение переменной, не определенной ранее, 
и обрабатывает исключение, выводя сообщение "Такой переменной не существует!"."""
# b = 10
# c = 11
# try:
#     print(a)
# except NameError:
#     print('Такой переменной не сущ..')

"""3) Напишите код, который принимает два числа от пользователя и выводит результат их деления. 
 Обработайте исключение, которое выйдет при делении на ноль, выводя сообщение "На ноль делить нельзя"""
# try:
#     a = int(input('Введите: '))
#     b = int(input('Введите: '))
#     print(a/b)
# except (ZeroDivisionError, ValueError):
#     print('На ноль делить нельзя')

"""4)Напишите код, который принимает две строки от пользователя, преобразует их в целые числа и 
 выводит их сумму. Обработайте исключение которое выйдет в случае если пользователь передал не число а
 строку, выводя сообщение "Введите число!"."""
# num1 = input()
# num2 = input()
# try:
#     print(int(num1)+int(num2))
# except ValueError:
#     print('Введите число')

"""5) Напишите код, который пытается получить значение по ключу из словаря. Обработайте исключение, 
которое выйдет если такого ключа нет, выводя сообщение "Нет такого ключа!". """
# dict1 ={'a': 1, 'b': 2, 'c': 3}
# try:
#     print(dict1['f'])
# except KeyError:
#     print('Нет такого ключа')

"""6)напишите код, который пытается получить элемент списка по индексу. 
 Обработайте исключение которое выйдет если такого индекса нет, выводя сообщение "Нет такого элемента!"."""
# list1 =[1, 2, 3, 4, 5]
# try:
#     print(list1[5])
# except IndexError:
#     print('Нет такого элемента!')    

"""7)Напишите код, который принимает возраст от пользователя и выбрасывает исключение ValueError с сообщением
"Доступ запрещён", если возраст меньше 18. Обработайте это исключение, выводя сообщение "Введён некорректный
 возраст". Используйте блоки else и finally для вывода сообщений "Спасибо" и "До свидания!" соответственно."""
# try:
#     age = int(input(': '))
#     if age < 18:
#         raise ValueError('Доступ запрещён')
# except ValueError:
#     print('Введён некорректный возраст')
# else:
#     print('Спасибо')
# finally:
#     print('До свидания!')

"""8) Напишите код, который принимает два числа от пользователя и выводит результат их деления. 
Обработайте исключения ValueError и ZeroDivisionError, выводя сообщение "Произошла ошибка!"."""
# try:
#     num1 = int(input(': '))
#     num2 = int(input(': '))
#     print(num1 / num2)
# except (ValueError, ZeroDivisionError):
#     print('Произошла ошибка')

"""9) Напишите код, который принимает сумму денег от пользователя и выбрасывает исключение ValueError 
с сообщением "Сумма не может быть отрицательной!", если сумма меньше 0. Обработайте это исключение 
и выведите сообщение ошибки. Если исключение не возникло, выведите сумму."""
# try:
#     summa = int(input(': '))
#     if summa < 0:
#             raise ValueError('Сумма не может быть отрицательной!')
# except (ValueError, ZeroDivisionError):
#     print('Произошла ошибка')
# else:
#     print(summa)

"""10)  Напишите код, который пытается вызвать метод get для списка. Обработайте исключение AttributeError,
 не выполняя никаких действий при возникновении ошибки."""
# nums = [1, 2, 3, 4]
# try:
#     print(nums.get(6))
# except AttributeError: pass

"""11) Напишите код, который пытается сложить строку и число. Обработайте исключение TypeError, 
выводя сообщение "Unsupported option"""
# a = 10
# b = 'a'
# try:
#     print(a + b)
# except TypeError:
#     print("Unsupported option")

"""12) Напишите код, который пытается расширить список, который не был создан. 
Обработайте исключение NameError, и выведите сообщение 'list does not exist'."""
# try:
#     list1.extend(range(10))
# except NameError:
#     print('list does not exist')    

"""13) Напишите код, который перебирает элементы списка, превышая его длину. 
Обработайте исключение IndexError, не выполняя никаких действий при возникновении ошибки."""
# list1 = [1, 2, 3, 4, 5]
# try:
#     for i in range(0, len(list1) +1):
#         print(list1[i])
# except IndexError:
#    print('Ошибка')

"""14) Напишите код, который проверяет длину пароля и выбрасывает исключение ValueError, 
если длина меньше 6 символов. (можно без try-except, просто через raise выкидывать ошибку)"""
# password = '12345'
# if len(password) < 6:
#     raise ValueError('Ошибка')

# try:
#     password = int(input('Введите пароль: '))
#     if len(str(password)) < 6:
#             raise ValueError('Ошибка')
# except ValueError:
#      print('not str')

"""15)Напишите код, который проверяет длину хранилища и выбрасывает исключение ValueError, если длина больше 10. 
Также выбрасывайте исключение ValueError, если какой-либо вложенный список внутри хранилища имеет длину больше 3."""
# warehouse = [
#     [[1, 2, 3], [1, 2, 3, 4, 5], {'hello': 'world'}],
#     ['1', '2', '3'],
#     [1, 2, 3, 4, 5, 6],
#     [[1], [2], [3]],
#     [[1, 2, 3], [1, 2, 3, 4, 5], {'hello': 'world'}],
#     ]
# if len(warehouse) > 10:
#      raise ValueError('на складе не должно быть более 10 коробок')
# for box in warehouse:
#      if len(box) > 3:
#           raise ValueError('В коробке не должно быть более 3-х элементов')

"""16) Напишите код, который пытается импортировать несуществующий модуль lamabimgo. 
Обработайте исключение ImportError, выводя сообщение "Такого модуля нет"."""
# try:
#     import lambimgo
# except ImportError:
#     print('Такого модуля не сущ.')

"""17) Напишите код, который уменьшает значение переменной в цикле while. 
Обработайте исключение KeyboardInterrupt, выводя сообщение "Nope"."""
n = 100000000
try:
    while n > 1:
        print(n)
        n -= 1
except KeyboardInterrupt:
    print("Nope")

"""18) Напишите код, который принимает строку, разделяет её на элементы и 
пытается преобразовать каждый элемент в целое число, добавляя его в список. Если элемент не является числом,
выбрасывайте исключение ValueError с сообщением "Данный элемент не является числом!"."""

inp1 = input().split()
print(inp1)
list1 =[]
for element in inp1:
    try:
        list1.append(int(element))
    except ValueError:
        print('Данный элмент не является числом')
print(list1)